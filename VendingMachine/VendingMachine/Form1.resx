<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BlackCoffee.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RKL/ASk1Ka7FbX4SAAAAAElFTkSuQmCC
</value>
  </data>
</root>